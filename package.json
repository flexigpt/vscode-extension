{
  "name": "flexigpt",
  "displayName": "FlexiGPT",
  "description": "Interact with GPT AI models (GPT 3.5/4, Anthropic Claude, All models of HuggingFace Inference API, Bison/Gecko by GoogleGL i.e PaLM API, etc, All models from llama.cpp like LLaMA1/2, Vicuna, GPT4All, etc) as a power user",
  "version": "0.13.1",
  "publisher": "ppipada",
  "pricing": "Free",
  "icon": "resources/extensionIcon.png",
  "license": "MIT",
  "repository": {
    "url": "https://github.com/ppipada/vscode-flexigpt"
  },
  "engines": {
    "vscode": "^1.74.0",
    "vscode-insiders": "^1.74.0"
  },
  "categories": [
    "Machine Learning",
    "Other",
    "Programming Languages"
  ],
  "keywords": [
    "copilot",
    "openai",
    "prompt engineering",
    "gpt-4",
    "chatgpt",
    "ai",
    "llama",
    "vicuna",
    "huggingface",
    "palm"
  ],
  "activationEvents": [
    "onStartup",
    "onView:fexigpt.chatView",
    "onCommand:fexigpt.ask",
    "onCommand:fexigpt.getcode",
    "onCommand:fexigpt.stackoverflow-search",
    "onCommand:fexigpt.runcli"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "flexigpt.ask",
        "title": "FlexiGPT: Ask"
      },
      {
        "command": "flexigpt.getcode",
        "title": "FlexiGPT: Get Code"
      },
      {
        "command": "flexigpt.stackoverflow-search",
        "title": "FlexiGPT: Stackoverflow Search"
      },
      {
        "command": "flexigpt.runcli",
        "title": "FlexiGPT: Run CLI Command"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "flexigpt.ask",
          "when": "editorTextFocus",
          "group": "flexigpt-menu-group@1"
        },
        {
          "command": "flexigpt.getcode",
          "when": "editorTextFocus",
          "group": "flexigpt-menu-group@1"
        },
        {
          "command": "flexigpt.stackoverflow-search",
          "when": "editorTextFocus",
          "group": "flexigpt-menu-group@1"
        },
        {
          "command": "flexigpt.runcli",
          "when": "editorTextFocus",
          "group": "flexigpt-menu-group@1"
        }
      ],
      "commandPalette": [
        {
          "command": "flexigpt.ask"
        },
        {
          "command": "flexigpt.getcode"
        },
        {
          "command": "flexigpt.stackoverflow-search"
        },
        {
          "command": "flexigpt.runcli"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "flexigpt",
          "title": "FlexiGPT",
          "icon": "resources/icon.png"
        }
      ]
    },
    "views": {
      "flexigpt": [
        {
          "type": "webview",
          "id": "flexigpt.chatView",
          "name": "Ask me"
        }
      ]
    },
    "keybindings": [
      {
        "key": "ctrl+alt+a",
        "command": "flexigpt.ask",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+alt+g",
        "command": "flexigpt.getcode",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+alt+s",
        "command": "flexigpt.stackoverflow-search",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+alt+c",
        "command": "flexigpt.runcli",
        "when": "editorTextFocus"
      }
    ],
    "configuration": {
      "title": "flexiGPT",
      "type": "object",
      "properties": {
        "flexigpt.promptFiles": {
          "type": "string",
          "default": "",
          "description": "Path for user defined prompt config files. For multiple path separate with ';'  C:\\MyPromptFolder0\\goprompt.json;C:\\MyPromptFolder1\\pyprompt.json",
          "order": 1
        },
        "flexigpt.inBuiltPrompts": {
          "type": "string",
          "default": "",
          "description": "prompt file names of inbuilt prompts to enable. For multiple names separate with ';'. 'flexigptbasic.js' will always be enabled.",
          "order": 2
        },
        "flexigpt.defaultProvider": {
          "type": "string",
          "default": "",
          "description": "The provider to use if multiple providers are configured. Currently supported values: openai, anthropic, huggingface, googlegl. By default, any valid provider with a apikey in config will be used.",
          "order": 3
        },
        "flexigpt.openai.apiKey": {
          "type": "string",
          "description": "Your openAI API key. Can be seen at https://beta.openai.com/account/api-keys",
          "order": 4
        },
        "flexigpt.openai.timeout": {
          "type": "integer",
          "default": 120,
          "description": "Timeout for OpenAI requests",
          "order": 4
        },
        "flexigpt.openai.defaultCompletionModel": {
          "type": "string",
          "default": "gpt-3.5-turbo",
          "description": "Default model to use for completion requests",
          "order": 4
        },
        "flexigpt.openai.defaultChatCompletionModel": {
          "type": "string",
          "default": "gpt-3.5-turbo",
          "description": "Default model to use for chat completion requests",
          "order": 4
        },
        "flexigpt.openai.defaultOrigin": {
          "type": "string",
          "default": "https://api.openai.com",
          "description": "Default origin to use for requests. This can be used to talk to any server that serves a compatible API",
          "order": 4
        },
        "flexigpt.anthropic.apiKey": {
          "type": "string",
          "description": "Your anthropic API key.",
          "order": 5
        },
        "flexigpt.anthropic.timeout": {
          "type": "integer",
          "default": 120,
          "description": "Timeout for anthropic requests",
          "order": 5
        },
        "flexigpt.anthropic.defaultCompletionModel": {
          "type": "string",
          "default": "claude-2",
          "description": "Default model to use for completion requests",
          "order": 5
        },
        "flexigpt.anthropic.defaultChatCompletionModel": {
          "type": "string",
          "default": "claude-2",
          "description": "Default model to use for chat completion requests",
          "order": 5
        },
        "flexigpt.anthropic.defaultOrigin": {
          "type": "string",
          "default": "https://api.anthropic.com",
          "description": "Default origin to use for requests. This can be used to talk to any server that serves a compatible API",
          "order": 5
        },
        "flexigpt.huggingface.apiKey": {
          "type": "string",
          "description": "Your huggingface API key.",
          "order": 6
        },
        "flexigpt.huggingface.timeout": {
          "type": "integer",
          "default": 120,
          "description": "Timeout for huggingface requests",
          "order": 6
        },
        "flexigpt.huggingface.defaultCompletionModel": {
          "type": "string",
          "default": "bigcode/starcoderbase",
          "description": "Default model to use for completion requests",
          "order": 6
        },
        "flexigpt.huggingface.defaultChatCompletionModel": {
          "type": "string",
          "default": "microsoft/DialoGPT-large",
          "description": "Default model to use for chat completion requests",
          "order": 6
        },
        "flexigpt.huggingface.defaultOrigin": {
          "type": "string",
          "default": "https://api-inference.huggingface.co",
          "description": "Default origin to use for requests. This can be used to talk to any server that serves a compatible API",
          "order": 6
        },
        "flexigpt.googlegl.apiKey": {
          "type": "string",
          "description": "Your googlegl API key.",
          "order": 7
        },
        "flexigpt.googlegl.timeout": {
          "type": "integer",
          "default": 120,
          "description": "Timeout for requests",
          "order": 7
        },
        "flexigpt.googlegl.defaultCompletionModel": {
          "type": "string",
          "default": "text-bison-001",
          "description": "Default model to use for completion requests",
          "order": 7
        },
        "flexigpt.googlegl.defaultChatCompletionModel": {
          "type": "string",
          "default": "chat-bison-001",
          "description": "Default model to use for chat completion requests",
          "order": 7
        },
        "flexigpt.googlegl.defaultOrigin": {
          "type": "string",
          "default": "https://generativelanguage.googleapis.com",
          "description": "Default origin to use for requests. This can be used to talk to any server that serves a compatible API",
          "order": 7
        },
        "flexigpt.llamacpp.apiKey": {
          "type": "string",
          "default": "",
          "description": "Your llamacpp API key.",
          "order": 8
        },
        "flexigpt.llamacpp.timeout": {
          "type": "integer",
          "default": 120,
          "description": "Timeout for requests",
          "order": 8
        },
        "flexigpt.llamacpp.defaultOrigin": {
          "type": "string",
          "default": "http://127.0.0.1:8080",
          "description": "Default origin to use for requests. This can be used to talk to any server that serves a compatible API",
          "order": 8
        }
      }
    }
  },
  "files": [
    "conversations.yml"
  ],
  "scripts": {
    "prepublish": "npm run truncate-yaml",
    "vscode:prepublish": "npm run truncate-yaml && npm run esbuild-base -- --minify",
    "truncate-yaml": "echo '' > ./conversations.yml",
    "esbuild-base": "rimraf out && esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node",
    "build": "npm run -S esbuild-base --no-cache -- --sourcemap",
    "compile": "npm run -S esbuild-base --no-cache -- --sourcemap",
    "watch": "npm run -S esbuild-base --no-cache -- --sourcemap",
    "fmt": "prettier --write \"src/**/*.ts\"&& npm run test -- --fix",
    "test": "node ./out/test/runTest.js",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run lint",
    "lint": "eslint src --ext ts",
    "debug": "node --inspect-brk $(which vscode-inspect-brk) . --extensionDevelopmentPath=/Users/pankajpipada/github/vscode-flexigpt"
  },
  "devDependencies": {
    "@types/chai": "^4.3.4",
    "@types/glob": "^8.0.0",
    "@types/js-yaml": "^4.0.5",
    "@types/mocha": "^10.0.1",
    "@types/mustache": "^4.2.2",
    "@types/node": "^18.11.18",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@typescript-eslint/parser": "^5.45.0",
    "@vscode/test-electron": "^2.2.0",
    "chai": "^4.3.7",
    "esbuild": "^0.17.5",
    "eslint": "^8.28.0",
    "glob": "^8.0.3",
    "mocha": "^10.2.0",
    "npm-version": "^1.1.0",
    "rimraf": "^4.1.2",
    "ts-loader": "^9.4.2",
    "typescript": "^4.9.3"
  },
  "dependencies": {
    "@types/highlight.js": "^10.1.0",
    "@types/prettier": "^2.7.2",
    "@types/uuid": "^9.0.1",
    "@types/vscode": "^1.76.0",
    "axios": "^1.4.0",
    "js-yaml": "^4.1.0",
    "mustache": "^4.2.0",
    "prettier": "^2.8.4",
    "uuid": "^9.0.0"
  }
}
